<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <decisions>
        <name>Check_If_account_is_Customer</name>
        <label>Check If account is Customer</label>
        <locationX>370</locationX>
        <locationY>350</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Account_is_Customer</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>getAccountRecordType.DeveloperName</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Account_Hierarchy_in_Child</targetReference>
            </connector>
            <label>Account is Customer</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Parent_1_is_available</name>
        <label>Check if Parent 1 is available</label>
        <locationX>604</locationX>
        <locationY>696</locationY>
        <defaultConnector>
            <targetReference>getAccountforChild1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_1_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ParentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetParent1</targetReference>
            </connector>
            <label>Parent 1 is available</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Parent_2_is_available</name>
        <label>Check if Parent 2 is available</label>
        <locationX>697</locationX>
        <locationY>1053</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_2_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetParent1.Parent.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetParent2</targetReference>
            </connector>
            <label>Parent 2 is available</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Parent_3_is_available</name>
        <label>Check if Parent 3 is available</label>
        <locationX>694</locationX>
        <locationY>1257</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_3_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetParent2.Parent.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetParent3</targetReference>
            </connector>
            <label>Parent 3 is available</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Parent_4_is_available</name>
        <label>Check if Parent 4 is available</label>
        <locationX>356</locationX>
        <locationY>1676</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Parent_4_is_available</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetParent3.Parent.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetParent4</targetReference>
            </connector>
            <label>Parent 4 is available</label>
        </rules>
    </decisions>
    <interviewLabel>Account in Hierarchy is Customer {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account in Hierarchy is Customer</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>getAccountforChild1</name>
        <label>getAccountforChild1</label>
        <locationX>1020</locationX>
        <locationY>693</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getAccountRecordType</name>
        <label>getAccountRecordType</label>
        <locationX>571</locationX>
        <locationY>401</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_If_account_is_Customer</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Account</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Customer</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetParent1</name>
        <label>GetParent1</label>
        <locationX>351</locationX>
        <locationY>838</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Account_Hierarchy_in_Parent_1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetParent2</name>
        <label>GetParent2</label>
        <locationX>349</locationX>
        <locationY>1042</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Account_Hierarchy_in_Parent_2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetParent1.Parent.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetParent3</name>
        <label>GetParent3</label>
        <locationX>714</locationX>
        <locationY>1462</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Account_Hierarchy_in_Parent_3</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetParent2.Parent.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetParent4</name>
        <label>GetParent4</label>
        <locationX>713</locationX>
        <locationY>1666</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Account_Hierarchy_in_Parent_4</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetParent3.Parent.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Account_Hierarchy_in_Child</name>
        <label>Update Account Hierarchy in Child</label>
        <locationX>384</locationX>
        <locationY>512</locationY>
        <connector>
            <targetReference>Check_if_Parent_1_is_available</targetReference>
        </connector>
        <inputAssignments>
            <field>Account_in_Hierarchy_is_Customer__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account_Hierarchy_in_Parent_1</name>
        <label>Update Account Hierarchy in Parent 1</label>
        <locationX>703</locationX>
        <locationY>854</locationY>
        <connector>
            <targetReference>Check_if_Parent_2_is_available</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetParent1.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Account_in_Hierarchy_is_Customer__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account_Hierarchy_in_Parent_2</name>
        <label>Update Account Hierarchy in Parent 2</label>
        <locationX>350</locationX>
        <locationY>1249</locationY>
        <connector>
            <targetReference>Check_if_Parent_3_is_available</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetParent2.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Account_in_Hierarchy_is_Customer__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account_Hierarchy_in_Parent_3</name>
        <label>Update Account Hierarchy in Parent 3</label>
        <locationX>364</locationX>
        <locationY>1448</locationY>
        <connector>
            <targetReference>Check_if_Parent_4_is_available</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetParent2.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Account_in_Hierarchy_is_Customer__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account_Hierarchy_in_Parent_4</name>
        <label>Update Account Hierarchy in Parent 4</label>
        <locationX>718</locationX>
        <locationY>1851</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetParent3.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Account_in_Hierarchy_is_Customer__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>449</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>getAccountRecordType</targetReference>
        </connector>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
